<div class="Screen">
<%= form_for @show do |f| %> 
  <% if @show.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@show.errors.count, "error") %> prohibited this show from being saved:</h2>
      <ul>
        <% @show.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>   

  <div class="field"> 
    <%= f.hidden_field :theater_id, value: @theater&.id %><br><br>
  </div>

  <div class="field"> 
    <%= f.label :screen %>
    <%= f.collection_select :screen_id, @screens, :id, :screen_name, {prompt: true }, { id: 'screen-select'}%><br><br>
  </div>   


  <div class="field">
    <%= f.label :screen_slot %>
    <%= f.collection_select :slot_ids, f.object.screen.nil? ? [] : f.object.screen.slots, :id, :start_time_and_end_time,{ prompt: true  },{id: 'slot-select' , multiple: true} %><br><br>  
    <%# <%= f.collection_select :slot_ids, f.object.screen&.slots || [], :id, :start_time_and_end_time,{ prompt: true  },{id: 'slot-select' , multiple: true} %>
  </div> 


  <div  class="field">
    <%= f.label :name%>
    <%= f.text_field :name %><br><br> 
  </div> 
 

<div class="field">
  <div class="duration-container">
    <%= f.label :duration %>
    <%= f.time_select :duration, default: { hour: 0, min: 0 } %>
  </div>
</div> 

         
  <div class="field">
    <%= f.label :start_date %>
    <%= f.date_field :start_date%><br><br>
  </div> 
  
<div id="time-slots-container">
  <% f.object.show_times.each do |show_time| %>
    <%= f.fields_for :show_times, show_time do |st| %>
      <div class="field time-container">
        <%= st.label :time %>
        <%= st.time_select :time, default: { hour: 0, min: 0 }, time_separator: ':', leading_zero: true %><br>
      </div>
    <% end %>
  <% end %>
</div> 

  
  <button type="button" id="add-time-slot-btn" >Add Time Slot</button><br><br>
  
  <div class="field">
    <%= f.label :recurring %>
    <%= f.check_box :recurring ,id: 'show_recurring'%><br><br> 
  </div>  

  <div id="card_details" style="display: none;" class="field">
    <%= f.label :end_date %>
    <%= f.date_field :end_date %><br><br> 
  </div>

  <div class="actions">
    <%= f.submit %>  
  </div> 
<% end %><br>
<%= link_to 'Back to Shows', shows_path %>
</div>



<script type="text/javascript">
  var checkbox = document.getElementById('show_recurring');
  var details_div = document.getElementById('card_details');

  checkbox.addEventListener('change', function() {
    details_div.style.display = this.checked ? 'block' : 'none';
  });
</script>

<script>
  var index = <%= @show.show_times.size %>;
  var container = document.getElementById('time-slots-container');
  var addButton = document.getElementById('add-time-slot-btn');

  addButton.addEventListener('click', function () {
  index++;

  var show_timesFields = document.createElement('div');
  show_timesFields.className = 'field';
  show_timesFields.innerHTML =
    '<label>Time</label>' +
    '<input type="time" name="show[show_times_attributes][' + index + '][time]" class="time-slot-input">' ;

  container.appendChild(show_timesFields);
});
</script>

<script>  
  $(document).ready(function() { 

    $(document).on('change', '#screen-select', function() {
      var screenId = $(this).val();
      console.log("selected-screen", screenId);
      $.ajax({
        url: '/screen_slots/',
        data: {screen_id: screenId },
        success: function(data) {
          try{
            var slotDropdown = $('#slot-select');
            slotDropdown.empty();
            slotDropdown.append($('<option>', {
              value: '',
              text: 'Select slot'
            }));
            $.each(data, function(index, slot) {
              var startTime = formatTime(slot.start_time);
              var endTime = formatTime(slot.end_time);
              var optionText = startTime + ' - ' + endTime;
              slotDropdown.append($('<option>', {
                value: slot.id,
                text: optionText
              }));
            });
          } catch (error) {
            console.error('Error processing response:', error);
          }
        },
        error: function(xhr, status, error) {
         console.error('AJAX request error:', error);
        }
      });
    });
  });


  function formatTime(dateTime) {
    var time = dateTime.split('T')[1].slice(0, 5);
    var hours = parseInt(time.split(':')[0]);
    var minutes = time.split(':')[1];
    var ampm = hours >= 12 ? 'PM' : 'AM';
    hours = hours % 12;
    hours = hours ? hours : 12;
    var formattedTime = hours + ':' + minutes + ' ' + ampm;
    return formattedTime;
  }
</script>  
